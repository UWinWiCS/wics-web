# This workflow will build and deploy your Astro site to GitHub Pages.
#
# To use this workflow, you will need to:
# 1. Create this file in your repository at .github/workflows/deploy.yml
# 2. In your repository's settings, go to "Pages" and set the "Source" to "GitHub Actions".

name: Deploy Astro to GitHub Pages

# Run this workflow on pushes to the main branch
on:
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify the Node.js version you are using
          cache: 'npm' # Cache npm dependencies for faster builds
          cache-dependency-path: 'wics-frontend/package-lock.json' # Point cache to nested package-lock

      - name: Install dependencies
        working-directory: ./wics-frontend
        run: npm ci

      - name: Build Astro site
        working-directory: ./wics-frontend
        # The base path should match your repository name if you are deploying to a subdirectory,
        # e.g., https://<username>.github.io/<repository-name>/
        # Make sure this matches the `base` option in your `astro.config.mjs`.
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Astro's default build output directory is `dist`
          path: ./wics-frontend/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
